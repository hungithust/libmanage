package st.librarymanagement.Config;

import javafx.application.Platform;
import javafx.scene.control.Alert;
import lombok.Getter;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class DatabaseConnection {

    @Getter
    private static Connection connection = null;

    public DatabaseConnection() {
        try {
            // Replace with your database URL, username, and password
            String url = "jdbc:mysql://localhost:3309/librarymanagement";
            String username = "root";
            String password = "4427";
            connection = DriverManager.getConnection(url, username, password);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public static void closeConnection() {
        if (connection != null) {
            try {
                connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    private static void showErrorAlert(String title, String header, String content) {
        Platform.runLater(() -> {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle(title);
            alert.setHeaderText(header);
            alert.setContentText(content);
            alert.showAndWait();
        });
    }

    public PreparedStatement prepareStatement(String sql) {
        try {
            return connection.prepareStatement(sql);
        } catch (SQLException e) {
            throw new RuntimeException("Error preparing statement: " + e.getMessage(), e);
        }
    }

    public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) {
        try {
            return connection.prepareStatement(sql, autoGeneratedKeys);
        } catch (SQLException e) {
            throw new RuntimeException("Error preparing statement: " + e.getMessage(), e);
        }
    }
}

